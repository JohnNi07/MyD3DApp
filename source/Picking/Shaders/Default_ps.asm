//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPerObject
// {
//
//   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
//   float4x4 gTexTransform;            // Offset:   64 Size:    64 [unused]
//   uint gMaterialIndex;               // Offset:  128 Size:     4
//   uint gObjPad0;                     // Offset:  132 Size:     4 [unused]
//   uint gObjPad1;                     // Offset:  136 Size:     4 [unused]
//   uint gObjPad2;                     // Offset:  140 Size:     4 [unused]
//
// }
//
// cbuffer cbPass
// {
//
//   float4x4 gView;                    // Offset:    0 Size:    64 [unused]
//   float4x4 gInvView;                 // Offset:   64 Size:    64 [unused]
//   float4x4 gProj;                    // Offset:  128 Size:    64 [unused]
//   float4x4 gInvProj;                 // Offset:  192 Size:    64 [unused]
//   float4x4 gViewProj;                // Offset:  256 Size:    64 [unused]
//   float4x4 gInvViewProj;             // Offset:  320 Size:    64 [unused]
//   float3 gEyePosW;                   // Offset:  384 Size:    12
//   float cbPerObjectPad1;             // Offset:  396 Size:     4 [unused]
//   float2 gRenderTargetSize;          // Offset:  400 Size:     8 [unused]
//   float2 gInvRenderTargetSize;       // Offset:  408 Size:     8 [unused]
//   float gNearZ;                      // Offset:  416 Size:     4 [unused]
//   float gFarZ;                       // Offset:  420 Size:     4 [unused]
//   float gTotalTime;                  // Offset:  424 Size:     4 [unused]
//   float gDeltaTime;                  // Offset:  428 Size:     4 [unused]
//   float4 gAmbientLight;              // Offset:  432 Size:    16
//   
//   struct Light
//   {
//       
//       float3 Strength;               // Offset:  448
//       float FalloffStart;            // Offset:  460
//       float3 Direction;              // Offset:  464
//       float FalloffEnd;              // Offset:  476
//       float3 Position;               // Offset:  480
//       float SpotPower;               // Offset:  492
//
//   } gLights[16];                     // Offset:  448 Size:   768
//
// }
//
// Resource bind info for gMaterialData
// {
//
//   struct MaterialData
//   {
//       
//       float4 DiffuseAlbedo;          // Offset:    0
//       float3 FresnelR0;              // Offset:   16
//       float Roughness;               // Offset:   28
//       float Specular;                // Offset:   32
//       float Metalic;                 // Offset:   36
//       float4x4 MatTransform;         // Offset:   40
//       uint DiffuseMapIndex;          // Offset:  104
//       uint MatPad0;                  // Offset:  108
//       uint MatPad1;                  // Offset:  112
//       uint MatPad2;                  // Offset:  116
//
//   } $Element;                        // Offset:    0 Size:   120
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// gsamLinearWrap                    sampler      NA          NA      S0             s2      1 
// gDiffuseMap                       texture  float4          2d      T0             t0      4 
// gMaterialData                     texture  struct         r/o      T1      t0,space1      1 
// cbPerObject                       cbuffer      NA          NA     CB0            cb0      1 
// cbPass                            cbuffer      NA          NA     CB1            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
// TEXCOORD                 1   xyz         4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_1
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[0:0][9], immediateIndexed, space=0
dcl_constantbuffer CB1[1:1][39], immediateIndexed, space=0
dcl_sampler S0[2:2], mode_default, space=0
dcl_resource_texture2d (float,float,float,float) T0[0:3], space=0
dcl_resource_structured T1[0:0], 120, space=1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 13
dcl_indexableTemp x0[21], 4
//
// Initial variable locations:
//   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
//   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
//   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
//   v3.x <- pin.TexC.x; v3.y <- pin.TexC.y; 
//   v4.x <- pin.PosL.x; v4.y <- pin.PosL.y; v4.z <- pin.PosL.z; 
//   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
//
#line 49 "C:\Users\86187\Desktop\2020_demo_assets\MyD3DApp\source\Picking\Shaders\Default.hlsl"
ld_structured r0.x, CB0[0][8].x, l(0), T1[0].xxxx  // r0.x <- matData.DiffuseAlbedo.x
ld_structured r0.y, CB0[0][8].x, l(4), T1[0].xxxx  // r0.y <- matData.DiffuseAlbedo.y
ld_structured r0.z, CB0[0][8].x, l(8), T1[0].xxxx  // r0.z <- matData.DiffuseAlbedo.z
ld_structured r0.w, CB0[0][8].x, l(12), T1[0].xxxx  // r0.w <- matData.DiffuseAlbedo.w
ld_structured r1.w, CB0[0][8].x, l(28), T1[0].xxxx  // r1.w <- matData.Roughness
ld_structured r2.y, CB0[0][8].x, l(32), T1[0].xxxx  // r2.y <- matData.Specular
ld_structured r2.z, CB0[0][8].x, l(36), T1[0].xxxx  // r2.z <- matData.Metalic
ld_structured r2.x, CB0[0][8].x, l(104), T1[0].xxxx  // r2.x <- matData.DiffuseMapIndex

#line 50
mov r0.xyzw, r0.xyzw  // r0.x <- diffuseAlbedo.x; r0.y <- diffuseAlbedo.y; r0.z <- diffuseAlbedo.z; r0.w <- diffuseAlbedo.w

#line 52
mov r1.w, r1.w  // r1.w <- roughness

#line 53
mov r2.y, r2.y  // r2.y <- specular

#line 54
mov r2.z, r2.z  // r2.z <- metalic

#line 55
mov r2.x, r2.x  // r2.x <- diffuseTexIndex

#line 58
sample r3.xyzw, v3.xyxx, T0[r2.x + 0].xyzw, S0[2]
mul r0.xyzw, r0.xyzw, r3.xyzw

#line 61
dp3 r2.x, v2.xyzx, v2.xyzx
rsq r2.x, r2.x
mul r3.xyz, r2.xxxx, v2.xyzx  // r3.x <- pin.NormalW.x; r3.y <- pin.NormalW.y; r3.z <- pin.NormalW.z

#line 64
mov r4.xyz, -v1.xyzx
add r4.xyz, r4.xyzx, CB1[1][24].xyzx
dp3 r2.x, r4.xyzx, r4.xyzx
rsq r2.x, r2.x
mul r4.xyz, r2.xxxx, r4.xyzx  // r4.x <- toEyeW.x; r4.y <- toEyeW.y; r4.z <- toEyeW.z

#line 67
mul r5.xyz, r0.xyzx, CB1[1][27].xyzx  // r5.x <- ambient.x; r5.y <- ambient.y; r5.z <- ambient.z

#line 70
mov r1.xyz, r0.xyzx  // r1.x <- mat.DiffuseAlbedo.x; r1.y <- mat.DiffuseAlbedo.y; r1.z <- mat.DiffuseAlbedo.z
mov r1.w, r1.w  // r1.w <- mat.Roughness
mov r2.y, r2.y  // r2.y <- mat.Specular
mov r2.z, r2.z  // r2.z <- mat.Metalic

#line 78
nop 
mov x0[0].xyz, CB1[1][28].xyzx
mov x0[2].xyz, CB1[1][29].xyzx
mov x0[4].xyz, CB1[1][30].xyzx
mov x0[6].xyz, CB1[1][31].xyzx
mov x0[8].xyz, CB1[1][32].xyzx
mov x0[10].xyz, CB1[1][33].xyzx
mov x0[12].xyz, CB1[1][34].xyzx
mov x0[14].xyz, CB1[1][35].xyzx
mov x0[16].xyz, CB1[1][36].xyzx
mov x0[18].xyz, CB1[1][37].xyzx
mov x0[20].xyz, CB1[1][38].xyzx
mov r1.xyzw, r1.xyzw
mov r2.yz, r2.yyzy
mov r3.xyz, r3.xyzx
mov r4.xyz, r4.xyzx

#line 285 "C:\Users\86187\Desktop\2020_demo_assets\MyD3DApp\source\Picking\Shaders\LightingUtil.hlsl"
mov r0.xyz, l(0,0,0,0)  // r0.x <- result.x; r0.y <- result.y; r0.z <- result.z

#line 290
mov r2.x, l(0)  // r2.x <- i
mov r6.xyz, r0.xyzx  // r6.x <- result.x; r6.y <- result.y; r6.z <- result.z
mov r2.w, r2.x  // r2.w <- i
loop 
  ilt r3.w, r2.w, l(3)
  breakc_z r3.w

#line 292
  mov r3.w, l(1.000000)  // r3.w <- shadowFactor.x
  nop 
  imul null, r4.w, r2.w, l(6)
  mov r7.xyz, x0[r4.w + 0].xyzx
  mov r8.xyz, x0[r4.w + 2].xyzx
  mov r9.xyz, r1.xyzx
  mov r10.y, r1.w
  mov r10.xz, r2.yyzy
  mov r11.xyz, r3.xyzx
  mov r12.xyz, r4.xyzx

#line 208
  mov r8.xyz, -r8.xyzx  // r8.x <- lightVec.x; r8.y <- lightVec.y; r8.z <- lightVec.z

#line 215
  nop 
  mov r7.xyz, r7.xyzx
  mov r9.xyz, r9.xyzx
  mov r10.xyz, r10.xyzx
  mov r11.xyz, r11.xyzx
  mov r12.xyz, r12.xyzx
  mov r8.xyz, r8.xyzx

#line 148
  nop 
  mov r11.xyz, r11.xyzx
  mov r12.xyz, r12.xyzx
  mov r8.xyz, r8.xyzx

#line 52
  dp3 r4.w, r11.xyzx, r8.xyzx  // r4.w <- Context.NoL

#line 53
  dp3 r5.w, r11.xyzx, r12.xyzx  // r5.w <- Context.NoV

#line 54
  dp3 r6.w, r12.xyzx, r8.xyzx  // r6.w <- Context.VoL

#line 55
  itof r7.w, l(2)
  itof r8.x, l(2)
  mul r8.x, r6.w, r8.x
  add r7.w, r7.w, r8.x
  rsq r7.w, r7.w  // r7.w <- InvLenH

#line 56
  add r8.x, r4.w, r5.w
  mul r8.x, r7.w, r8.x
  max r8.x, r8.x, l(0.000000)
  min r8.x, r8.x, l(1.000000)  // r8.x <- Context.NoH

#line 57
  mul r6.w, r6.w, r7.w
  add r6.w, r6.w, r7.w
  max r6.w, r6.w, l(0.000000)
  min r8.y, r6.w, l(1.000000)  // r8.y <- Context.VoH

#line 148
  mov r5.w, r5.w  // r5.w <- DotVarStruct.NoV
  mov r4.w, r4.w  // r4.w <- DotVarStruct.NoL
  mov r8.x, r8.x  // r8.x <- DotVarStruct.NoH
  mov r8.y, r8.y  // r8.y <- DotVarStruct.VoH

#line 149
  mov r6.w, -r5.w
  max r5.w, r5.w, r6.w
  add r5.w, r5.w, l(0.000010)
  max r5.w, r5.w, l(0.000000)
  min r5.w, r5.w, l(1.000000)  // r5.w <- DotVarStruct.NoV

#line 150
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)  // r4.w <- DotVarStruct.NoL

#line 152
  nop 
  mov r10.x, r10.x
  mov r9.xyz, r9.xyzx
  mov r10.z, r10.z

#line 137
  nop 
  mov r10.x, r10.x

#line 132
  mul r6.w, r10.x, l(0.080000)  // r6.w <- <DielectricSpecularToF0 return value>

#line 137
  mov r11.xyz, -r6.wwww
  add r11.xyz, r9.xyzx, r11.xyzx
  mul r11.xyz, r10.zzzz, r11.xyzx
  add r11.xyz, r6.wwww, r11.xyzx  // r11.x <- <ComputeF0 return value>.x; r11.y <- <ComputeF0 return value>.y; r11.z <- <ComputeF0 return value>.z

#line 152
  mov r11.xyz, r11.xyzx  // r11.x <- specularColor.x; r11.y <- specularColor.y; r11.z <- specularColor.z

#line 153
  mul r10.xzw, r10.zzzz, r9.xxyz
  mov r10.xzw, -r10.xxzw
  add r9.xyz, r9.xyzx, r10.xzwx  // r9.x <- DiffuseColor.x; r9.y <- DiffuseColor.y; r9.z <- DiffuseColor.z

#line 155
  mul r10.xzw, r4.wwww, r7.xxyz
  nop 
  mov r9.xyz, r9.xyzx

#line 79
  mul r9.xyz, r9.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)  // r9.x <- <Diffuse_Lambert return value>.x; r9.y <- <Diffuse_Lambert return value>.y; r9.z <- <Diffuse_Lambert return value>.z

#line 155
  mul r9.xyz, r9.xyzx, r10.xzwx  // r9.x <- DiffuseTerm.x; r9.y <- DiffuseTerm.y; r9.z <- DiffuseTerm.z

#line 156
  mul r7.xyz, r4.wwww, r7.xyzx
  nop 
  mov r10.y, r10.y
  mov r11.xyz, r11.xyzx
  mov r5.w, r5.w
  mov r8.xy, r8.xyxx
  mov r4.w, r4.w

#line 117
  mov r6.w, l(1.000000)
  mul r7.w, r10.y, r10.y
  mul r7.w, r7.w, r7.w
  mul r6.w, r6.w, r7.w  // r6.w <- a2

#line 122
  nop 
  mov r6.w, r6.w
  mov r8.x, r8.x

#line 88
  mul r7.w, r6.w, r8.x
  mov r8.z, -r8.x
  add r7.w, r7.w, r8.z
  mul r7.w, r8.x, r7.w
  itof r8.x, l(1)
  add r7.w, r7.w, r8.x  // r7.w <- d

#line 89
  mul r8.x, r7.w, l(3.141593)
  mul r7.w, r7.w, r8.x
  div r7.w, r6.w, r7.w  // r7.w <- <D_GGX return value>

#line 122
  mov r7.w, r7.w  // r7.w <- D

#line 123
  nop 
  mov r6.w, r6.w
  mov r5.w, r5.w
  mov r4.w, r4.w

#line 96
  sqrt r6.w, r6.w  // r6.w <- a

#line 97
  itof r8.x, l(1)
  mov r8.z, -r6.w
  add r8.x, r8.z, r8.x
  mul r8.x, r5.w, r8.x
  add r8.x, r6.w, r8.x
  mul r8.x, r4.w, r8.x  // r8.x <- Vis_SmithV

#line 98
  itof r8.z, l(1)
  mov r8.w, -r6.w
  add r8.z, r8.w, r8.z
  mul r4.w, r4.w, r8.z
  add r4.w, r6.w, r4.w
  mul r4.w, r4.w, r5.w  // r4.w <- Vis_SmithL

#line 99
  add r4.w, r4.w, r8.x
  rcp r4.w, r4.w
  mul r4.w, r4.w, l(0.500000)  // r4.w <- <Vis_SmithJointApprox return value>

#line 123
  mov r4.w, r4.w  // r4.w <- Vis

#line 124
  nop 
  mov r11.xyz, r11.xyzx
  mov r8.y, r8.y

#line 106
  itof r5.w, l(1)
  mov r6.w, -r8.y
  add r5.w, r5.w, r6.w
  mov r6.w, l(1.000000)
  mul r6.w, r5.w, r6.w
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, r6.w  // r5.w <- Fc

#line 110
  mul r6.w, r11.y, l(50.000000)
  max r6.w, r6.w, l(0.000000)
  min r6.w, r6.w, l(1.000000)
  mul r6.w, r5.w, r6.w
  itof r8.x, l(1)
  mov r5.w, -r5.w
  add r5.w, r5.w, r8.x
  mul r8.xyz, r11.xyzx, r5.wwww
  add r8.xyz, r6.wwww, r8.xyzx  // r8.x <- <F_Schlick return value>.x; r8.y <- <F_Schlick return value>.y; r8.z <- <F_Schlick return value>.z

#line 124
  mov r8.xyz, r8.xyzx  // r8.x <- F.x; r8.y <- F.y; r8.z <- F.z

#line 126
  mul r4.w, r4.w, r7.w
  mul r8.xyz, r8.xyzx, r4.wwww  // r8.x <- <SpecularGGX return value>.x; r8.y <- <SpecularGGX return value>.y; r8.z <- <SpecularGGX return value>.z

#line 156
  mul r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- SpecTerm.x; r7.y <- SpecTerm.y; r7.z <- SpecTerm.z

#line 158
  add r7.xyz, r7.xyzx, r9.xyzx  // r7.x <- <BRDF return value>.x; r7.y <- <BRDF return value>.y; r7.z <- <BRDF return value>.z

#line 215
  mov r7.xyz, r7.xyzx  // r7.x <- <ComputeDirectionalLight return value>.x; r7.y <- <ComputeDirectionalLight return value>.y; r7.z <- <ComputeDirectionalLight return value>.z

#line 292
  mul r7.xyz, r3.wwww, r7.xyzx
  add r6.xyz, r6.xyzx, r7.xyzx

#line 293
  iadd r2.w, r2.w, l(1)
endloop 

#line 310
mov r6.xyz, r6.xyzx  // r6.x <- <ComputeLighting return value>.x; r6.y <- <ComputeLighting return value>.y; r6.z <- <ComputeLighting return value>.z

#line 78 "C:\Users\86187\Desktop\2020_demo_assets\MyD3DApp\source\Picking\Shaders\Default.hlsl"
mov r6.xyz, r6.xyzx  // r6.x <- directLight.x; r6.y <- directLight.y; r6.z <- directLight.z

#line 81
add r0.xyz, r5.xyzx, r6.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z

#line 84
mov r0.w, r0.w  // r0.w <- litColor.w

#line 86
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 202 instruction slots used
