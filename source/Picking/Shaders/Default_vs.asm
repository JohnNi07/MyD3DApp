//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPerObject
// {
//
//   float4x4 gWorld;                   // Offset:    0 Size:    64
//   float4x4 gTexTransform;            // Offset:   64 Size:    64
//   uint gMaterialIndex;               // Offset:  128 Size:     4
//   uint gObjPad0;                     // Offset:  132 Size:     4 [unused]
//   uint gObjPad1;                     // Offset:  136 Size:     4 [unused]
//   uint gObjPad2;                     // Offset:  140 Size:     4 [unused]
//
// }
//
// cbuffer cbPass
// {
//
//   float4x4 gView;                    // Offset:    0 Size:    64 [unused]
//   float4x4 gInvView;                 // Offset:   64 Size:    64 [unused]
//   float4x4 gProj;                    // Offset:  128 Size:    64 [unused]
//   float4x4 gInvProj;                 // Offset:  192 Size:    64 [unused]
//   float4x4 gViewProj;                // Offset:  256 Size:    64
//   float4x4 gInvViewProj;             // Offset:  320 Size:    64 [unused]
//   float3 gEyePosW;                   // Offset:  384 Size:    12 [unused]
//   float cbPerObjectPad1;             // Offset:  396 Size:     4 [unused]
//   float2 gRenderTargetSize;          // Offset:  400 Size:     8 [unused]
//   float2 gInvRenderTargetSize;       // Offset:  408 Size:     8 [unused]
//   float gNearZ;                      // Offset:  416 Size:     4 [unused]
//   float gFarZ;                       // Offset:  420 Size:     4 [unused]
//   float gTotalTime;                  // Offset:  424 Size:     4 [unused]
//   float gDeltaTime;                  // Offset:  428 Size:     4 [unused]
//   float4 gAmbientLight;              // Offset:  432 Size:    16 [unused]
//   
//   struct Light
//   {
//       
//       float3 Strength;               // Offset:  448
//       float FalloffStart;            // Offset:  460
//       float3 Direction;              // Offset:  464
//       float FalloffEnd;              // Offset:  476
//       float3 Position;               // Offset:  480
//       float SpotPower;               // Offset:  492
//
//   } gLights[16];                     // Offset:  448 Size:   768 [unused]
//
// }
//
// Resource bind info for gMaterialData
// {
//
//   struct MaterialData
//   {
//       
//       float4 DiffuseAlbedo;          // Offset:    0
//       float3 FresnelR0;              // Offset:   16
//       float Roughness;               // Offset:   28
//       float Specular;                // Offset:   32
//       float Metalic;                 // Offset:   36
//       float4x4 MatTransform;         // Offset:   40
//       uint DiffuseMapIndex;          // Offset:  104
//       uint MatPad0;                  // Offset:  108
//       uint MatPad1;                  // Offset:  112
//       uint MatPad2;                  // Offset:  116
//
//   } $Element;                        // Offset:    0 Size:   120
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// gMaterialData                     texture  struct         r/o      T0      t0,space1      1 
// cbPerObject                       cbuffer      NA          NA     CB0            cb0      1 
// cbPass                            cbuffer      NA          NA     CB1            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
vs_5_1
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[0:0][9], immediateIndexed, space=0
dcl_constantbuffer CB1[1:1][20], immediateIndexed, space=0
dcl_resource_structured T0[0:0], 120, space=1
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xy
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
//   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
//   v2.x <- vin.TexC.x; v2.y <- vin.TexC.y; 
//   o3.x <- <VS return value>.TexC.x; o3.y <- <VS return value>.TexC.y; 
//   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
//   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
//   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
//
#line 28 "C:\Users\86187\Desktop\2020_demo_assets\MyD3DApp\source\Picking\Shaders\Default.hlsl"
ld_structured r0.x, CB0[0][8].x, l(40), T0[0].xxxx  // r0.x <- matData.MatTransform._m00
ld_structured r1.x, CB0[0][8].x, l(56), T0[0].xxxx  // r1.x <- matData.MatTransform._m01
ld_structured r0.y, CB0[0][8].x, l(44), T0[0].xxxx  // r0.y <- matData.MatTransform._m10
ld_structured r1.y, CB0[0][8].x, l(60), T0[0].xxxx  // r1.y <- matData.MatTransform._m11
ld_structured r0.z, CB0[0][8].x, l(48), T0[0].xxxx  // r0.z <- matData.MatTransform._m20
ld_structured r1.z, CB0[0][8].x, l(64), T0[0].xxxx  // r1.z <- matData.MatTransform._m21
ld_structured r0.w, CB0[0][8].x, l(52), T0[0].xxxx  // r0.w <- matData.MatTransform._m30
ld_structured r1.w, CB0[0][8].x, l(68), T0[0].xxxx  // r1.w <- matData.MatTransform._m31

#line 31
mov r2.xyz, v0.xyzx
mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, CB0[0][0].xyzw  // r3.x <- posW.x
dp4 r3.y, r2.xyzw, CB0[0][1].xyzw  // r3.y <- posW.y
dp4 r3.z, r2.xyzw, CB0[0][2].xyzw  // r3.z <- posW.z
dp4 r3.w, r2.xyzw, CB0[0][3].xyzw  // r3.w <- posW.w

#line 32
mov r3.xyz, r3.xyzx  // r3.x <- vout.PosW.x; r3.y <- vout.PosW.y; r3.z <- vout.PosW.z

#line 35
dp3 r2.x, v1.xyzx, CB0[0][0].xyzx  // r2.x <- vout.NormalW.x
dp3 r2.y, v1.xyzx, CB0[0][1].xyzx  // r2.y <- vout.NormalW.y
dp3 r2.z, v1.xyzx, CB0[0][2].xyzx  // r2.z <- vout.NormalW.z

#line 38
dp4 r4.x, r3.xyzw, CB1[1][16].xyzw  // r4.x <- vout.PosH.x
dp4 r4.y, r3.xyzw, CB1[1][17].xyzw  // r4.y <- vout.PosH.y
dp4 r4.z, r3.xyzw, CB1[1][18].xyzw  // r4.z <- vout.PosH.z
dp4 r4.w, r3.xyzw, CB1[1][19].xyzw  // r4.w <- vout.PosH.w

#line 41
mov r5.xy, v2.xyxx
mov r5.zw, l(0,0,0,1.000000)
dp4 r6.x, r5.xyzw, CB0[0][4].xyzw  // r6.x <- texC.x
dp4 r6.y, r5.xyzw, CB0[0][5].xyzw  // r6.y <- texC.y
dp4 r6.z, r5.xyzw, CB0[0][6].xyzw  // r6.z <- texC.z
dp4 r6.w, r5.xyzw, CB0[0][7].xyzw  // r6.w <- texC.w

#line 42
dp4 r0.x, r6.xyzw, r0.xyzw  // r0.x <- vout.TexC.x
dp4 r0.y, r6.xyzw, r1.xyzw  // r0.y <- vout.TexC.y

#line 44
mov o0.xyzw, r4.xyzw
mov o1.xyz, r3.xyzx
mov o2.xyz, r2.xyzx
mov o3.xy, r0.xyxx
ret 
// Approximately 35 instruction slots used
