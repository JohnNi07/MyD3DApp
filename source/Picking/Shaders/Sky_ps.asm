//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// gsamLinearWrap                    sampler      NA          NA      S0             s2      1 
// gCubeMap                          texture  float4        cube      T0      t0,space2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float       
// POSITION                 1   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_1
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler S0[2:2], mode_default, space=0
dcl_resource_texturecube (float,float,float,float) T0[0:0], space=2
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
//
// Initial variable locations:
//   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
//   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
//   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
//   v3.x <- pin.TexC.x; v3.y <- pin.TexC.y; 
//   v4.x <- pin.PosL.x; v4.y <- pin.PosL.y; v4.z <- pin.PosL.z; 
//   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
//
#line 41 "C:\Users\86187\Desktop\2020_demo_assets\MyD3DApp\source\Picking\Shaders\Sky.hlsl"
sample o0.xyzw, v4.xyzx, T0[0].xyzw, S0[2]
ret 
// Approximately 2 instruction slots used
